<Window
    x:Class="Vavatech.ViewModelFirst.WpfClient.Views.ShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:Vavatech.ViewModelFirst.WpfClient.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Vavatech.ViewModelFirst.WpfClient.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:Vavatech.ViewModelFirst.WpfClient.ViewModels"
    Title="ShellView"
    Width="800"
    Height="450"
    Style="{StaticResource CustomWindowStyle}"
    WindowStyle="None"
    mc:Ignorable="d">

    <Window.DataContext>
        <vm:ShellViewModel />
    </Window.DataContext>

    <Window.Resources>

        <c:ViewModelConverter x:Key="ViewModelConverter" />

        <Storyboard x:Key="OpenMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="GridMenu" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <EasingDoubleKeyFrame KeyTime="0" Value="70" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="200" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="GridMenu" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <EasingDoubleKeyFrame KeyTime="0" Value="200" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="70" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Style TargetType="Button">
            <Setter Property="Margin" Value="10" />
            <Setter Property="Width" Value="200" />
            <Setter Property="Height" Value="50" />
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Color x:Key="MyBlue">#052767</Color>
        <Color x:Key="MyPurple">#3a0647</Color>

        <SolidColorBrush x:Key="MyBlueBrush" Color="{StaticResource MyBlue}" />


        <LinearGradientBrush x:Key="MyGradientBrush">
            <GradientStop Color="{StaticResource MyBlue}" />
            <GradientStop Offset="1" Color="{StaticResource MyPurple}" />
        </LinearGradientBrush>


        <Style TargetType="MenuItem">
            <Setter Property="Height" Value="50" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Margin" Value="10,0" />

            <Style.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Foreground" Value="Yellow" />
                    <Setter Property="BorderBrush" Value="White" />
                    <Setter Property="Background" Value="Red" />

                </Trigger>

                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="White" />
                    <Setter Property="Background" Value="{StaticResource MyGradientBrush}" />

                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="MyMenuItem" TargetType="{x:Type MenuItem}">

            <StackPanel>



                <Expander Foreground="{TemplateBinding Foreground}" IsExpanded="False">


                    <Expander.Header>
                        <ContentPresenter
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            Content="{TemplateBinding Header}"
                            ContentSource="Header"
                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Expander.Header>


                    <ItemsPresenter
                        x:Name="ItemsPresenter"
                        Grid.IsSharedSizeScope="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle"
                        KeyboardNavigation.TabNavigation="Cycle"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                </Expander>

            </StackPanel>

        </ControlTemplate>


    </Window.Resources>

    <Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonOpenMenu">
            <BeginStoryboard Storyboard="{StaticResource OpenMenu}" />
        </EventTrigger>
        <!--<EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonCloseMenu">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>-->
    </Window.Triggers>

    <Grid>



        <DockPanel>

            <!--<StackPanel DockPanel.Dock="Top">
                <Button
                    x:Name="Close"
                    Width="50"
                    Height="50"
                    Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}"
                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                    Content="Close"
                    IsTabStop="False"
                    ToolTip="Close"
                    WindowChrome.IsHitTestVisibleInChrome="True" />
            </StackPanel>-->



            <StackPanel Background="{StaticResource MyGradientBrush}" DockPanel.Dock="Left">



                <Button
                    x:Name="ButtonOpenMenu"
                    Width="60"
                    Height="60"
                    Margin="5"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="{x:Null}"
                    BorderBrush="{x:Null}"
                    Foreground="#FF31577E"
                    Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}">
                    <materialDesign:PackIcon
                        Width="25"
                        Height="25"
                        Kind="Menu" />
                </Button>

                <Menu
                    x:Name="GridMenu"
                    Width="49"
                    HorizontalAlignment="Left"
                    Background="{StaticResource MyGradientBrush}"
                    Foreground="White">



                    <Menu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel />
                        </ItemsPanelTemplate>
                    </Menu.ItemsPanel>




                    <MenuItem Command="{Binding ShowFirstViewCommand}" Header="First View">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Gambling" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Command="{Binding ShowSecondViewCommand}" Header="Second View">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="User" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <Separator />

                    <MenuItem Header="File">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="File" />
                        </MenuItem.Icon>
                        <MenuItem
                            Command="{Binding ShowViewCommand}"
                            CommandParameter="Customers"
                            Header="Show Customers" />
                        <MenuItem
                            Command="{Binding ShowViewCommand}"
                            CommandParameter="Products"
                            Header="Show Products" />
                        <MenuItem
                            Command="{Binding ShowViewCommand}"
                            CommandParameter="Counter"
                            Header="Show Counter" />
                        <Separator />
                        <MenuItem Command="{Binding ExitCommand}" Header="Exit" />
                    </MenuItem>

                    <MenuItem Header="Edit">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Edit" />
                        </MenuItem.Icon>

                    </MenuItem>
                    <MenuItem Header="View">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ViewAgenda" />
                        </MenuItem.Icon>
                    </MenuItem>


                    <MenuItem Header="Help">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Help" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="Settings">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Settings" />
                        </MenuItem.Icon>
                    </MenuItem>

                </Menu>

            </StackPanel>




            <!--<Expander
                DockPanel.Dock="Top"
                Header="Group"
                IsExpanded="False">

                <StackPanel Orientation="Horizontal">

                    <Button
                        Background="DarkBlue"
                        Command="{Binding ShowFirstViewCommand}"
                        Content="Show First" />
                    <Button
                        Background="DarkGreen"
                        Command="{Binding ShowSecondViewCommand}"
                        Content="Show Second" />

                </StackPanel>

            </Expander>-->



            <!--<ListBox
                Width="200"
                DockPanel.Dock="Left"
                ItemsSource="{Binding ViewModels}"
                SelectedItem="{Binding SelectedViewModel}">

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Button Background="Black" Content="{Binding}" />
                    </DataTemplate>
                </ListBox.ItemTemplate>

            </ListBox>-->





            <!--<ListBox
                Width="200"
                DockPanel.Dock="Left"
                SelectedItem="{Binding SelectedViewModelName}"
                SelectionChanged="ListBox_SelectionChanged">


                <ListBoxItem Tag="Views/FirstView.xaml">First View</ListBoxItem>
                <ListBoxItem Tag="Views/SecondView.xaml">Second View</ListBoxItem>

            </ListBox>-->



            <!--<ContentControl Content="{Binding SelectedViewModel}" />-->

            <Frame Source="{Binding SelectedViewModel, Converter={StaticResource ViewModelConverter}}" />

            <!--<Frame Source="FirstPageView.xaml" />-->

        </DockPanel>

    </Grid>
</Window>
