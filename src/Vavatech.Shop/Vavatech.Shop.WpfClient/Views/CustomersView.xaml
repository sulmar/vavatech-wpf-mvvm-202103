<Page x:Class="Vavatech.Shop.WpfClient.Views.CustomersView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Vavatech.Shop.WpfClient.Views"
      xmlns:vm="clr-namespace:Vavatech.Shop.ViewModels;assembly=Vavatech.Shop.ViewModels" 
      xmlns:m="clr-namespace:Vavatech.Shop.Models;assembly=Vavatech.Shop.Models"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
      DataContext="{Binding Source={StaticResource ViewModelLocator}, Path=CustomersViewModel}"
      x:Name="Customers"
      mc:Ignorable="d"       
      d:DesignHeight="450" d:DesignWidth="800"      
      Title="CustomersView">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <!--<Page.DataContext>
            <vm:CustomersViewModel  />
        </Page.DataContext>-->

    <Page.Resources>

        <CollectionViewSource x:Key="CustomersViewSource" Source="{Binding SelectedCustomers}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="FirstName" />
                <scm:SortDescription PropertyName="LastName" />

            </CollectionViewSource.SortDescriptions>

        </CollectionViewSource>

    </Page.Resources>

    <DockPanel>

        <!-- Search Panel -->

        <StackPanel DockPanel.Dock="Top">

            <StackPanel.Resources>

                <Style TargetType="Label">
                    <Setter Property="Width" Value="100" />
                    <Setter Property="Margin" Value="5"  />
                </Style>

                <Style TargetType="TextBox">
                    <Setter Property="Width" Value="200" />
                    <Setter Property="Margin" Value="5"  />
                </Style>

            </StackPanel.Resources>

            <StackPanel Orientation="Horizontal" >

                <Label>First name</Label>
                <TextBox Text="{Binding SearchCriteria.FirstName}" />

                <Label>Last name</Label>
                <TextBox Text="{Binding SearchCriteria.LastName}" />

            </StackPanel>

            <StackPanel Orientation="Horizontal" >

                <Label>Credit from</Label>
                <TextBox Width="200" Text="{Binding SearchCriteria.CreditAmountFrom}" />

                <Label>Credit to</Label>
                <TextBox Width="200" Text="{Binding SearchCriteria.CreditAmountTo}" />

            </StackPanel>

            <Button Command="{Binding SearchCommand}" Background="DarkBlue">Search</Button>

        </StackPanel>




        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <!-- Customers -->

            <!--<ListBox             
            ItemsSource="{Binding Path=Customers}"
            ItemTemplate="{StaticResource CustomerTemplate}"
            SelectedItem="{Binding Path=SelectedCustomer}" >
          
        </ListBox>-->

            <StackPanel>

                <Label>TotalCreditAmount</Label>
                <TextBlock Text="{Binding TotalCreditAmount}" />


                <ScrollViewer>

                    <ListView ItemsSource="{Binding Source={StaticResource CustomersViewSource}}"
                  SelectedItem="{Binding SelectedCustomer}"
                  Width="500"
                      Height="600"
                  x:Name="CustomersListView"
                  >

                        <ListView.View>
                            <GridView>
                                <GridView.Columns>
                                    <GridViewColumn Width="100" Header="First name" DisplayMemberBinding="{Binding FirstName}" />
                                    <GridViewColumn x:Name="LastNameHeader" Header="Last name" DisplayMemberBinding="{Binding LastName}" >
                                        <!--<GridViewColumn.Width>
                                <MultiBinding Converter="">
                                    <Binding ElementName="CustomersListView" Path="ActualWidth" />
                                    <Binding ElementName="LastNameHeader" Path="Header" />
                                </MultiBinding>
                            </GridViewColumn.Width>-->
                                    </GridViewColumn>

                                    <GridViewColumn Header="Customer Type" DisplayMemberBinding="{Binding CustomerType}" />

                                    <GridViewColumn Header="Credit Amount" DisplayMemberBinding="{Binding CreditAmount}" />

                                    <GridViewColumn Header="Country" DisplayMemberBinding="{Binding Country}" />

                                </GridView.Columns>
                            </GridView>
                        </ListView.View>
                    </ListView>

                </ScrollViewer>


            </StackPanel>

            <!--<DataGrid 
            ItemsSource="{Binding Customers}"
            SelectedItem="{Binding SelectedCustomer}"
            AutoGenerateColumns="False">

            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Avatar">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding Avatar}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="First Name" Binding="{Binding FirstName}" />
                <DataGridTextColumn Header="Last Name" Binding="{Binding LastName}" />
                <DataGridCheckBoxColumn Header="Removed" Binding="{Binding IsRemoved}" />
            </DataGrid.Columns>
            
        </DataGrid>-->

            <!-- Selected customer -->

            <StackPanel Grid.Column="1" DataContext="{Binding SelectedCustomer}">

                <StackPanel.Resources>

                    <ControlTemplate x:Key="ErrorTemplate">
                        <DockPanel>
                            <Border BorderBrush="Red" BorderThickness="3">

                                <AdornedElementPlaceholder />

                            </Border>
                        </DockPanel>
                    </ControlTemplate>

                    <Style TargetType="TextBox">
                        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}" />
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True" >

                                <!--<Setter Property="ToolTip"  
                                        Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />-->

                                <Setter Property="ToolTip"
                                        Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(Validation.Errors)/ErrorContent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>


                </StackPanel.Resources>

                <TextBlock FontWeight="Bold" FontSize="16" Text="{Binding FullName}" />

                <Label>First name</Label>
                <TextBox
                Validation.ErrorTemplate="{StaticResource ErrorTemplate}"
                Text="{Binding FirstName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />

                <Label>Last name</Label>
                <TextBox Text="{Binding LastName,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />

                <Label>Customer type</Label>
                <ComboBox SelectedItem="{Binding CustomerType}"
                      ItemsSource="{Binding ElementName=Customers, Path=DataContext.CustomerTypes}" />


                <Label>Country</Label>
                <ComboBox 
                      ItemsSource="{Binding ElementName=Customers, Path=DataContext.Countries}"
                      SelectedItem="{Binding Country}"
                    />

                <StackPanel x:Name="Poland">
                    <Label>Pesel</Label>
                    <TextBox x:Name="Pesel" Text="{Binding Pesel}" />

                    <Label>Regon</Label>
                    <TextBox Text="{Binding Regon}" />

                    <StackPanel.Style>

                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Country}" Value="{x:Static m:Country.Poland}" >
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                        
                    </StackPanel.Style>
                </StackPanel>

                <StackPanel x:Name="Germany">
                    <Label>TaxId</Label>
                    <TextBox Text="{Binding TaxId}" />

                    <Label>Land</Label>
                    <TextBox Text="{Binding Land}" />

                    <StackPanel.Style>

                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Country}" Value="{x:Static m:Country.Germany}" >
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>

                    </StackPanel.Style>
                </StackPanel>


                <Label>Credit amount</Label>
                <TextBox Text="{Binding CreditAmount, ValidatesOnDataErrors=True}" />

                <Label>Removed</Label>
                <CheckBox IsChecked="{Binding IsRemoved}" />

                <Button Background="DarkBlue" Command="{Binding ElementName=Customers, Path=DataContext.AddCustomerCommand}">Add</Button>
                <Button Background="DarkRed" Command="{Binding ElementName=Customers, Path=DataContext.RemoveCustomerCommand}">Remove</Button>
            </StackPanel>

        </Grid>

    </DockPanel>

</Page>
